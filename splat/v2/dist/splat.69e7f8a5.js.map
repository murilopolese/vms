{"version":3,"sources":["splat.js"],"names":["format_matrix","ruleArray","formatted","offsetX","offsetY","length","y","x","Rule","when","then","match","grid","element","matching","_y","_x","symbol","value","name","empty","apply","elements","Element","rules","color","clearGrid","GRID_HEIGHT","GRID_WIDTH","push","i","c","String","fromCharCode","module","exports"],"mappings":"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","file":"splat.69e7f8a5.js","sourceRoot":"..","sourcesContent":["function format_matrix(ruleArray) {\n  const formatted = [\n    ['.', '.', '.'],\n    ['.', '.', '.'],\n    ['.', '.', '.']\n  ]\n  let offsetX = 0\n  let offsetY = 0\n  if (ruleArray.length < 3) {\n    offsetY = 1\n  }\n  if (ruleArray[0].length < 3) {\n    offsetX = 1\n  }\n\n  for (let y = 0; y < ruleArray.length; y++) {\n    for (let x = 0; x < ruleArray[y].length; x++) {\n      formatted[y+offsetY][x+offsetX] = ruleArray[y][x]\n    }\n  }\n\n  return formatted\n}\n\nfunction Rule({ when = [[]], then = [[]] }) {\n  this.when = format_matrix(when)\n  this.then = format_matrix(then)\n\n  this.match = function(grid, x, y) {\n    let element = grid[y][x]\n    // console.log('will try to match rule', this.when)\n    let matching = true\n    for (let _y = 0; _y < 3; _y++) {\n      for (let _x = 0; _x < 3; _x++) {\n        let symbol = this.when[_y][_x]\n        let value = grid[y+_y-1][x+_x-1]\n        switch (symbol) {\n          case '@':\n            if (value.name !== element.name) {\n              matching = false\n            }\n            break\n          case '.':\n            // it could be anything here\n            break\n          case '?':\n            if (value.name === empty.name) {\n              matching = false\n            }\n            break;\n          case '_':\n            if (value.name !== empty.name) {\n              matching = false\n            }\n            break;\n          case null:\n            // Do nothing\n            break\n          default:\n            if (value.name[0] !== symbol) {\n              matching = false\n            }\n        }\n      }\n    }\n    return matching\n  }\n\n  this.apply = function(grid, x, y) {\n    let element = grid[y][x]\n    // console.log('applying rule', this.then)\n    for (let _y = 0; _y < 3; _y++) {\n      for (let _x = 0; _x < 3; _x++) {\n        let symbol = this.then[_y][_x]\n        switch (symbol) {\n          case '@':\n            grid[y+_y-1][x+_x-1] = elements[element.name]\n            break\n          case '.':\n          case '?':\n          case null:\n            // Do nothing\n            break\n          case '_':\n              grid[y+_y-1][x+_x-1] = empty\n            break;\n          default:\n            grid[y+_y-1][x+_x-1] = elements[symbol]\n        }\n      }\n    }\n    return grid\n  }\n}\n\nfunction Element({ name = '_', rules = [], color = 'white' }) {\n  this.name = name\n  this.rules = rules\n  this.color = color\n}\n\nlet empty = new Element({ name: '_'})\nfunction clearGrid(grid) {\n  if (!grid) grid = []\n  for (let y = 0; y < GRID_HEIGHT; y++) {\n    grid[y] = []\n    for (let x = 0; x < GRID_WIDTH; x++) {\n      grid[y].push(empty)\n    }\n  }\n  return grid\n}\n\nlet elements = {}\n\nfor (let i = 65; i < 91; i++) {\n  let c = String.fromCharCode(i)\n  elements[c] = new Element({ name: `${c}` })\n}\n\nconst GRID_WIDTH = 30\nconst GRID_HEIGHT = 30\nlet grid = clearGrid()\n\nmodule.exports = {\n  GRID_WIDTH,\n  GRID_HEIGHT,\n  Rule: Rule,\n  Element: Element,\n  grid: grid,\n  elements: elements,\n  clearGrid: clearGrid\n}\n"]}